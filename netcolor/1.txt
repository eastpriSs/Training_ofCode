
# --------------------------------------------------------- ^
#       NETCOLOR
#
#       Программа выводит расписание светофоров
#       И дает знать о горящем в определенное 
#       время цвете
#
#       Необходимая информация: 
#       
#       1) Время, когда с красного на зеленый переключился.
#       2) Секунды, сколько горит красный и зеленный цвет.
# --------------------------------------------------------- ^






# *  --- ЧАСТЬ ПОДДЕРЖКИ ДЛЯ ПОЛЬЗОВАТЕЛЕЙ -----------------------/
# *
# *                 здесь можно добавлять сведения о светофорах
# * 

# ================= ПРИМЕР (имитация матрицы) :

HSMGR=()

#  ================ Час, минуты, секунды - то время, когда с красного
#                   на зеленый сменился цвет
HSMGR[0,0]=8   
HSMGR[0,1]=2
HSMGR[0,2]=3
#   ===============  Время (сек) 'сколько' горит зеленый и красный   
HSMGR[0,3]=55
HSMGR[0,4]=20



# *
# *     здесь можно добавить место и его ID, только оно должно
# *     совпадать с тем, что было вами указано в матрице
# *
outputID () {
    echo "
     ---------*--*--------------*--*--------------*--*----
    |    ID:                    PLACE:                    |
    |     0                 Sanatoriy OB'                 |  
    
    
     -*-------------*-----------------------*-------------
    "
}
# *
# *  --------------------------------------------------------------\















# *  --- ЧАСТЬ ПОДДЕРЖКИ ДЛЯ РАЗРАБОТКИ -----------------------/
# *
outputManual () {
    echo "
     __________________________________
    |        MANUAL                    |  
    |    print '-1' for exit           |    
    |    print '-2 '                 ? |
    |__________________________________|
    "
}


IDin=99 # ВВОД
outputTimeTable () {
    
    # Исходное время светофора
    HOUR=${HSMGR[ $IDin, 0   ]}   #  ЧАС 
    MINUTE=${HSMGR[ $IDin, 1 ]}   #  МИНУТА
    SECOND=${HSMGR[ $IDin, 2 ]}   #  СЕКУНДА
    GREEN=${HSMGR[ $IDin, 3  ]}   #  ЗЕЛЕНЫЙ ЦВЕТ
    RED=${HSMGR[ $IDin, 4    ]}   #  КРАСНЫЙ ЦВЕТ
    
    # --------------------------------------------------------------------/
    #                   ВЫВОД  =  8:0:0|55:22                       
    # --------------------------------------------------------------------\
    printf "$HOUR:$MINUTE:$SECOND" 
    echo   "|$GREEN:$RED"
    
    # Разница между системным временем и исходным светофора (сек)
    # идет до +2 часа к системному
    
    timeSystemHour=$(date '+%H')
    diffTime=$(((timeSystemHour - HOUR) / 2 / 2 * 8 * 3600)) 
    
    for((originTime=0; originTime < diffTime; originTime+=$((GREEN+RED))))
    do
        
        # Инвариант секунд # NEED REFACTORING можно вынести проверку
        # в отдельную функцию
        echo "GREEN -- $HOUR:$MINUTE:$SECOND +$GREEN sec" 
        
        if [ $((SECOND+GREEN)) -ge 60 ]
        then
            SECOND=$((SECOND + GREEN - 60))
            ((MINUTE+=1))
        else
            ((SECOND+=$GREEN))
        fi
        
        echo "RED -- $HOUR:$MINUTE:$SECOND +$RED sec"
        
        if [ $((SECOND+RED)) -ge 60 ]
        then
            SECOND=$((SECOND + RED - 60))
            ((MINUTE+=1))
        else
            ((SECOND+=$RED))
        fi
        
        # Странная тема. В одной из версий программы
        # может сыграть плохую шутку. А также при других
        # (больших значений) может выйти казус
        # рекомендую минуты добавлять в отдельную переменную,
        # а потом в основную
        if [ $MINUTE -ge 60 ]
        then
            # MINUTE=$((MINUTE + localmin - 60)) Вот, как вариант
            MINUTE=0
            ((HOUR+=1))
        fi
        
        if [ $HOUR == 24 ]
        then
            HOUR=0
        fi
        
    done
    
    
}

# Точка входа
outputID
while [ 1==1 ]
do 
    outputManual
    
    printf "ID: "
    read IDin
    clear
    
    # Выход из программы
    if [ $IDin == -1 ] 
    then
        break
    fi
    
    outputID 
    outputTimeTable
done
# *  --------------------------------------------------------------\

